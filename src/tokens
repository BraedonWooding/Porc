// Special format that is read by `generate_token_data.py`
// Line comments work (only line no block)
// A token by itself i.e. NULL just generates the enum but no data
// You can give it multiple data tags all separated by tabs
// It will generate the appropriate data classes given the tags

// Void Tokens
Undefined
Nil
Bool
// variable or function name or macro or something
Identifier
Str
Flt
Err
Int
Char
EndOfFile

// punctuation
Comma               ","
SemiColon           ";"
LeftParen           "("
RightParen          ")"
LeftBrace           "{"
RightBrace          "}"
LeftBracket         "["
RightBracket        "]"
LineComment         "//"
BlockComment        "/*"

// comparison
LessThan            "<"
GreaterThan         ">"
Equal               "=="
NotEqual            "!="
LessThanEqual       "<="
GreaterThanEqual    ">="
Negate              "!"
And                 "&&"
Or                  "||"

// math
Increment           "++"
Decrement           "--"
Add                 "+"
Subtract            "-"
Divide              "/"
Multiply            "*"
Power               "**"
Modulus             "%"
IntegerDivide       "%/"

// assignment
Assign              "="
AddAssign           "+="
SubtractAssign      "-="
MultiplyAssign      "*="
DivideAssign        "/="
PowerAssign         "**="
IntegerDivideAssign "%/="
ModulusAssign       "%="

// Special Symbols
FatArrow            "=>"
LeftArrow           "<-"
RightArrow          "->"
Colon               ":"
DoubleColon         "::"
Implements          "^"
Variant             "|"
Dot                 "."
Range               ".."
Macro               "@"
Ternary             "?"

// Reserved names
Const               "const"
Struct              "struct"
Func                "fn"
Let                 "let"
Return              "return"
While               "while"
For                 "for"
Break               "break"
Continue            "continue"
If                  "if"
Else                "else"
