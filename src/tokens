// Special format that is read by `generate_token_data.py`
// Line comments work (only line no block)
// A token by itself i.e. NULL just generates the enum but no data
// You can give it multiple data tags all separated by tabs
// It will generate the appropriate data classes given the tags

// Void Tokens
NULL
STR
FLT
INT
CHAR
EOF

// punctuation
COMMA			","
SEMICOLON		";"
L_PAREN			"("
R_PAREN			")"
L_BRACE			"{"
R_BRACE 		"}"
L_BRACKET		"["
R_BRACKET		"]"

// comparison
LT				"<"
GT				">"
EQ 				"=="
NEQ				"!="
LT_EQL			"<="
GT_EQL			">="
NEG				"!"
AND				"&&"
OR				"||"

// math
INCR			"++"
DECR			"--"
ADD				"+"
SUB				"-"
DIV				"/"
MUL				"*"
POW				"**"
MOD				"%"
INT_DIV			"%/"

// assignment
ASSIGN 			"="
ADD_ASSIGN		"+="
SUB_ASSIGN		"-="
MUL_ASSIGN		"*="
DIV_ASSIGN		"/="
POW_ASSIGN		"**="
INT_DIV_ASSIGN	"%/="
MOD_ASSIGN		"%="

// Special Symbols
FAT_ARROW		"=>"
L_ARROW			"<-"
R_ARROW			"->"
COLON			":"
DOUBLE_COLON	"::"
IMPLEMENTS		"^"
VARIANT			"|"
DOT				"."
RANGE			".."
MACRO			"@"
TERNARY			"?"

// Reserved names
FUNC			"fn"
RETURN			"return"
WHILE			"while"
FOR				"for"
BREAK			"break"
CONTINUE		"continue"
IF				"if"
ELSE			"else"

